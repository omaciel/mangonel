#!/usr/bin/env python

import argparse
import os
import sys
import unittest

# katello-cli requires kerberos module
try:
    import kerberos
except ImportError, e:
    print "Please install kerberos module."

if __name__ == "__main__":

    prog = "Mangonel"
    description = "Runs unittest against a Katello instance."
    usage = "%(prog)s --host <HOST> --username <NAME> --password <PASSWORD> --tests [<TEST1>, <TESTn>]"
    epilog = "Constructive comments and feedback can be sent to Og Maciel <omaciel at ogmaciel dot com>."
    version = "%(prog)s 0.1"

    parser = argparse.ArgumentParser(prog=prog, usage=usage, description=description, epilog=epilog, version=version)

    parser.add_argument('-s', '--host', type=str, dest='host', help='Server url')
    parser.add_argument('-u', '--username', type=str, dest='username', default='admin', help='Valid system username')
    parser.add_argument('-p', '--password', type=str, dest='password', default='admin', help='Valid system user password')
    parser.add_argument('--project', type=str, dest='project', default='/katello', help='Project can be either "katello" or "headpin"')
    parser.add_argument('--port', type=str, dest='port', default='443', help='Server port, defaults to 443')
    parser.add_argument('-t', '--tests', type=str, action='append', help='The name of the tests to be run.')
    parser.add_argument('--verbose', type=int,  choices=range(1, 6), default=1, help='Debug verbosity level')

    parser.add_argument('--sshkey', type=str, dest='sshkey', default=os.path.expanduser('~/.ssh/id_rsa'), help='Path to ssh key to connect to server.')
    parser.add_argument('--root', type=str, dest='root', default='root', help='User name to connect to server via ssh. Most of the time the default "root" will work.')

    [options, ignored_options] = parser.parse_known_args()

    # Validation
    if options.host is None:
        parser.print_usage()
        sys.exit(-1)
    else:
        os.environ['KATELLO_HOST'] = options.host
        os.environ['KATELLO_USERNAME'] = options.username
        os.environ['KATELLO_PASSWORD'] = options.password

        # Make sure that PROJECT starts with leading "/"
        if not options.project.startswith("/"): options.project = "/" + options.project
        os.environ['PROJECT'] = options.project

        os.environ['KATELLO_PORT'] = options.port
        os.environ['VERBOSITY'] = str(options.verbose)

        os.environ['SSH_KEY'] = options.sshkey
        os.environ['ROOT'] = options.root

    loader = unittest.TestLoader()
    suite = unittest.TestSuite()

    for test_name in options.tests:
        suite.addTests(loader.loadTestsFromName(test_name))

    runner = unittest.TextTestRunner(verbosity=options.verbose)
    result = runner.run(suite)
